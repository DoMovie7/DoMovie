plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.red'
version = '0.0.1-SNAPSHOT'

bootJar{
	archiveFileName= "domovie-${version}.jar"
	exclude '**/ssh/*'
}

jar{
	enabled = false
	
	from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    from('user.dic') {// JAR 파일의 루트에 'user.dic' 파일을 포함
        into('/') // JAR 파일의 루트에 포함되도록 설정
    }

    manifest {
        attributes(
            'Main-Class': 'com.project.bookbook' // 메인 클래스 설정
        )
    }
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven {url 'https://repo.spring.io/snapshot'}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.springframework.data:spring-data-commons:3.3.3'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.modelmapper:modelmapper:3.2.1'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'com.github.shin285:KOMORAN:3.3.9'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:1.0.0-SNAPSHOT' 
	//이미지 처리를 위한 s3 추가
  	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.github.mwiede:jsch:0.2.18'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
