<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.red.domovie.domain.mapper.MovieDetailMapper">


	<insert id="saveMovieRating">
		INSERT INTO movie_ratings(
		user_id,
		movie_id,
		rating,
		comments,
		created_at,
		updated_at
		) VALUES(
		#{userId},
		#{dto.movieId},
		#{dto.rating},
		#{dto.comments},
		NOW(),
		NOW()
		)

	</insert>

	<select id="findUserMovieRating" resultType="com.red.domovie.domain.dto.movieDetail.getMovieRatingDTO">
		SELECT mr.movie_id as movieId, mr.rating, mr.comments,
		u.user_id as userId, u.nick_name as nickName
		FROM movie_ratings mr
		JOIN
		user u ON mr.user_id = u.user_id
		WHERE mr.user_id = #{userId} AND
		mr.movie_id = #{movieID}

	</select>


	<select id="list" parameterType="map"
		resultType="com.red.domovie.domain.dto.movieDetail.getMovieRatingDTO">
		SELECT 
		FROM movie_ratings mr
		LIMIT ${offset} , ${pageSize}
	</select>
	
	
	<select id="findMovieRatingList" resultType="com.red.domovie.domain.dto.movieDetail.getMovieRatingDTO">
        SELECT mr.movie_id as movieId, mr.rating, mr.comments,
               u.user_id as userId, u.nick_name as nickName
        FROM movie_ratings mr
        JOIN user u ON mr.user_id = u.user_id
        WHERE mr.movie_id = #{movieID}
        ORDER BY mr.created_at DESC
        LIMIT #{offset}, #{size}
    </select>
    
    
    <select id="countMovieRatings" resultType="long">
        SELECT COUNT(*) FROM movie_ratings WHERE movie_id = #{movieID}
    </select>
	



    
    
</mapper>
